name: Cargo Build & Release

on:
  push:
    branches:
      - "main"
    tags:
      - "*"

jobs:
  build:
    runs-on: ${{ matrix.system.os }}
    strategy:
      matrix:
        system:
          - { target: x86_64-apple-darwin, os: macos-latest }
          - { target: aarch64-apple-darwin, os: macos-latest }
          - { target: x86_64-unknown-linux-gnu, os: ubuntu-latest }
          - { target: aarch64-unknown-linux-gnu, os: ubuntu-latest }

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build project
        run: cargo build --release --target ${{ matrix.system.target }}

      - name: Package build
        run: |
          mkdir -p dist
          cp target/release/guia dist/
        env:
          CARGO_TARGET_DIR: target

      - name: Upload release assets
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.system.target }}
          path: dist/

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: ubuntu-latest-release
          path: dist/ubuntu
      - name: Download macOS build artifacts
        uses: actions/download-artifact@v4
        with:
          name: macos-latest-release
          path: dist/macos

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload build to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/${{ matrix.system.target }}/guia
          asset_name: ${{ matrix.system.target }},
          asset_content_type: application/octet-stream
